digraph "Graphical Class Hierarchy"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="uriVL::LinearSolver",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver.html",tooltip="Parent class to all classes that implement an algorithm for solving a system of linear equations..."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="uriVL::LinearSolver\l_Cholesky",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__Cholesky.html"];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="uriVL::LinearSolver\l_GaussSeidel",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__GaussSeidel.html",tooltip="Class that implement the Gauss-Seidel iterative algorithm for solving SLEs. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="uriVL::LinearSolver\l_Jacobi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__Jacobi.html",tooltip="Class that implement the Jacobi iterative algorithm for solving SLEs. "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="uriVL::LinearSolver_LU",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__LU.html",tooltip="Class that implement Crout&#39;s version of the LU factorization algorithm for solving SLEs..."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="uriVL::LinearSolver_QR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__QR.html",tooltip="Class that implement the Householder QR factorization algorithm for solving overdetermined SLEs..."];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="uriVL::LinearSolver_SOR",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__SOR.html",tooltip="Class that implement the Successive Over-relaxation (SOR) iterative algorithm for solving SLEs..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="uriVL::LinearSolver_SVD",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classuriVL_1_1LinearSolver__SVD.html",tooltip="Class that implement the Singular Value Decomposition algorithm for solving arbitrary SLEs..."];
}
