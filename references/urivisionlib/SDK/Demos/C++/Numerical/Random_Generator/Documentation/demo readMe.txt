ran0() takes one parameter: a pointer to an int.If the variable your pointer points to has a negative value, then ran0 willuse this value as seed for the pseudo-random sequence generation.  In any case,ran0 returns the next pseudo-random number on its sequence, a float number inthe range [0, 1]How to usein your main program, declare a global variable that will store the seed.int gSeed;				//	seed for random generatoralso declare and create a RandomGenerator objectRandomGenerator		randGen;or a pointer to such an object, to allocate later RandomGenerator		*myGen;[...]myGen = new RandomGenerator();When you initialize your application, seed your generatorif you want a random seed:	gSeed = -(int)time(NULL);If you want to get the same random-looking sequence of numbers (for example to debugyour program or evaluate its performance), assign some negative value to gSeed:    gSeed = -5;Then you need to seed the random generator		x = randGen.ran0(&gSeed);				or				x = myGen->ran0(&gSeed);Whenever you need a "random" number, you don't need to pass the seed anymore		x = randGen.ran0();				or				x = myGen->ran0();