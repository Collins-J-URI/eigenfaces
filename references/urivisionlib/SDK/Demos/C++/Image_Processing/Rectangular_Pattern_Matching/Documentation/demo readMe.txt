	This project demonstrates the use of a number of  PatternMatcher2D         classes.  In particular, its showcases partial pattern matchers that       deal with occlusion of the pattern by an object of the scene.              The partial matcher computes matching scores for different parts of        the pattern (here, 4 quadrants).  The results of the matching for the      different parts are then analyzed to decide whether there is occlusion. 																				Version	1.2 [05/03/2006]													Version	1.3 [03/25/2007]    simple cleanup																												Author:	jean-yves herve', 3D Group for Interactive Visualization,                                    Department of Computer Science and Statistics								  University of Rhode Island																									   o The upper-left subwindow shows the reference image (gray-level or            color, the user can right-click to select which).  Within this             image, the user can select a rectangular region that will be used          as our pattern to find a match for.                                  	o The upper-right subwindow shows the rectangular region selected in           the upper-left quadrant                                             	o The lower-left subwindow shows a noisy copy of the original image            (the noise is selected/applied by the user) in which we will seek          a best match for the blob pattern selected.                                Middle click and drag fills in the selected rectangle with random          pixel values (for occlusion).  In the same menu, the user can              select the pattern matching algorithm to use for subsequent                matches.   The user can select a search region by mouse click and          drag (remider: this is the search region for the upper left corner         of the pattern).                                                    	o The lower-right subwindow shows the template pattern overlaid on the                     noisy image at the location of the best match           																			Note that1) Just because the result shown in the lower-right quadrant is the "best" match doesnot mean that it is a good one.  It is up to the user to decide when the score returned(besides other things) in the Pattern2DMatchRecord is good enough.2) At this point only the basic correlation algorithm is completely implemented.  I haven't hadthe time to look again at the other ones (scaled difference and scaled median difference).  The partial correlation matcher used to work about 4-5 months ago but now crashes.  I will trackthat bug next.Obviously, more sophisticated matching algorithms could be used (if corresponding Pattern2DMatcher subclasses aren't yet part of the library, feel free to do so (and contribute your implementation to the library).